plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'api'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring data jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	// spring data redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// spring validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// h2 database
	runtimeOnly 'com.h2database:h2'
	
	// mysql driver
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	// jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	
	// etc
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(org.gradle.api.tasks.testing.Test) {
    useJUnitPlatform()

    if (System.getenv("CI") == "true") {
        systemProperty "spring.profiles.active", "ci"
    }
    // 로컬에서는 아무 프로파일도 강제하지 않으므로 application.properties(H2) 사용
}
